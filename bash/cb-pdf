#!/usr/bin/env bash

# organizes data from a coinbase pdf file

PDF="../inputs/cb_input.pdf"

PDFCMD="pdftotext -nopgbrk"

# Incremental Number: awk 'BEGIN{OFS=" "; col1=1}{print col1,$0; col1+=1}'
# Duplicate Quantity: awk '{print $0, $6}'
# BTC Regex: (bc1|[13])[a-zA-HJ-NP-Z0-9]{25,39}$
# Awk Command: join lines similar to sed -e :a -e ...
# awk -v RS='-\n' ORS='1'

OVFORMAT=$(pdftotext -raw -nopgbrk "$PDF" - \
  | sd $(cat replace) '' \
  | sed '/^ *$/d' \
  | sed -e :a -e '/^Rewards$/N; s/Rewards\n/Rewards /; ta' \
  | sed -e :a -e '/\-$/N; s/\-\n/\-/; ta' \
  | sed -e :a -e '/Z$/N; s/Z\n/Z /; ta' \
  | sed -e :a -e '/Income$/N; s/Income\n/Income /; ta' \
  | sd '(Sold|Bought|Received|\$).+$' '' \
  | sed '/Send/d' \
  | sed 's/Coinbase Earn/Coinbase-Earn/g; s/Rewards Income/Rewards-Income/g' \
  | sed -e 's/^/Coinbase /')

echo "${OVFORMAT}"

# General attributes
OWNER=$($PDFCMD "$PDF" - \
  | rg -o "Transaction report for \w+ \w+" \
  | sed -e 's/Transaction report for //g')

EMAIL=$($PDFCMD "$PDF" - \
  | rg -o "\S+@\S+$")

RANGE=$($PDFCMD "$PDF" - \
  | rg -o '^(To|From):\s\d{1,4}-\d{1,4}-?\d*T\d{2}:\d{2}:\d{2}Z')

TIMESTAMPS=$(echo "${OVFORMAT}" \
  | rg -o '^\d{1,4}-\d{1,4}-?\d*T\d{2}:\d{2}:\d{2}Z$' \
  | sed -e 's/ /\n/g')

# Categories
BUYS=$(echo "${OVFORMAT}" \
  | rg --color=never 'Buy' \
  | sed -E 's/Bought.+$//g;s/^[0-9].+Z //g')

BUYS_COUNT=$(echo "${BUYS}" \
  | sed -n '$=')

SELLS=$(echo "${OVFORMAT}" \
  | rg --color=never 'Sell' \
  | sed -E 's/Sold.+$//g')

SELLS_COUNT=$(echo "${OVFORMAT}" \
  | sed -n '$=')

SENTS=$(echo "${OVFORMAT}" \
  | rg --color=never 'Send' \
  | sed -E 's/Sent.+$//g')

SENTS_COUNT=$(echo "${OVFORMAT}" \
  | sed -n '$=')

# Cryptos
COINS=$(printf "${BUYS}\n${SELLS}\n" \
  | awk '{print $2}' \
  | uniq)

BUYS_TOT=$(printf "${BUYS}\n" \
  | awk '{print $NF}' \
  | sed 's/\$//g' \
  | awk '{sum+=$1;} END{print sum;}')

SELLS_TOT=$(printf "${SELLS}\n" \
  | awk '{print $NF}' \
  | sed 's/\$//g' \
  | awk '{sum+=$1;} END{print sum;}')


# Add sells, subtract buys?


# Awk - Piping shorter only for Sell
# awk '{gsub(/\$/, "")} {print $1, $NF};' \
#   | awk '$1 ~ /Sell/ {s+=$2;}END{print s;}'


# Awk - Single if statment on Sell
# | awk '{gsub(/\$/, "")} {
#     if ($1 ~ /Sell/) {c+=$NF;}}
#       END{print c}'

# # Awk - Gets both Sell and Buy count
# printf "$BUYS\n$SELLS\n" \
#   | awk '{
#       if ($1 ~ /Sell/) {
#         gsub(/\$/, "")
#         {s+=$NF;}
#       } else if ($1 ~ /Buy/) {
#         gsub(/\$/, "")
#         {b+=$NF}
#       }
#     } END{print s, b}'

# printf "${SELLS_TOT}\n"
# printf "$BUYS\n$SELLS\n"
# printf "${TIMESTAMPS[0]}\n"
